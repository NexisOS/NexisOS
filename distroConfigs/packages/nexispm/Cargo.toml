[package]
name = "nexispm"
version = "0.1.0"
edition = "2021"
authors = ["Kyle Gortych <kyle.gortych.dev@gmail.com>"]
description = "Declarative system package manager for NexisOS with optimized store operations, refcounting, and generation rollbacks"
license = "GPL-3.0-or-later"
repository = "https://github.com/NexisOS/NexisOS"
homepage = "https://github.com/NexisOS/NexisOS"
documentation = "https://github.com/NexisOS/NexisOS"
readme = "README.md"
keywords = ["package-manager", "linux", "declarative", "nixos-like", "rollback"]
categories = ["command-line-utilities", "development-tools", "os"]

[lib]
name = "nexispm"
path = "src/lib.rs"

[[bin]]
name = "nexis"
path = "src/main.rs"

[dependencies]
# CLI and configuration
clap = { version = "4.4", features = ["derive", "env", "color"] }
serde = { version = "1.0", features = ["derive", "rc"] }
toml = "0.8"
toml_edit = { version = "0.22", optional = true }
config = { version = "0.14", optional = true }
tera = { version = "1.19", optional = true }

# Validation & diagnostics
schemars = { version = "0.8", features = ["serde"], optional = true }
serde_valid = { version = "0.15", features = ["derive"], optional = true }
miette = { version = "7", features = ["fancy"] }
thiserror = "1.0"

# Storage backends - choose ONE at compile time
lmdb = { version = "0.8.0", optional = true }
rocksdb = { version = "0.22", features = ["multi-threaded-cf"], optional = true }
redb = { version = "2.1", optional = true }  # Pure Rust, faster than LMDB for some workloads

# Async runtime and HTTP client
tokio = { version = "1", features = [
    "rt-multi-thread", 
    "macros", 
    "fs", 
    "process", 
    "io-util", 
    "signal", 
    "time",
    "net"
] }
reqwest = { version = "0.12", features = ["stream", "rustls-tls", "gzip", "brotli", "hickory-dns"] }
futures = "0.3"

# Hashing and cryptography
blake3 = { version = "1", features = ["rayon"] }  # Parallel hashing
sha2 = "0.10"
ring = "0.17"
ed25519-dalek = { version = "2.0", optional = true }
xxhash-rust = { version = "0.8", features = ["xxh3"], optional = true }  # Fast non-crypto hashing

# Merkle tree implementation for content verification
merkle-cbt = { version = "0.3", optional = true }  # Compact Binary Tree implementation
rs_merkle = { version = "1.4", optional = true }   # Alternative Merkle tree

# Compression support
flate2 = "1.0"
tar = "0.4"
zstd = { version = "0.13", features = ["pkg-config"] }
lz4 = { version = "1.24", optional = true }
brotli = { version = "5.0", optional = true }

# File system operations
walkdir = "2.5"
tempfile = "3.10"
xattr = "1.3"
users = "0.11"
caps = { version = "0.5", optional = true }
which = "6.0"
libc = "0.2"
camino = "1.1"
fs-err = "2"
notify = "6.1"
reflink-copy = { version = "0.1", optional = true }  # CoW file copying

# SELinux integration (mandatory for your distro)
selinux = { version = "0.4", optional = true }
selinux-sys = { version = "0.6", optional = true }

# Dinit service management (mandatory for your distro)
ini = "1.3"  # For dinit service file parsing

# Error handling and logging
anyhow = "1.0"
log = "0.4"
env_logger = "0.11"
tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }

# Date/time handling
chrono = { version = "0.4", features = ["serde"] }

# JSON and serialization
serde_json = "1.0"
bincode = "1"
rmp-serde = { version = "1.1", optional = true }  # MessagePack for compact serialization

# Concurrency and performance
parking_lot = "0.12"
dashmap = { version = "5.5", optional = true }
rayon = { version = "1.10", optional = true }
crossbeam = { version = "0.8", optional = true }
bloom = { version = "0.3", optional = true }
ahash = { version = "0.8", optional = true }  # Faster hashing for HashMap

# CLI UX
console = "0.15"
indicatif = "0.17"
dialoguer = { version = "0.11", optional = true }
tui = { version = "0.19", optional = true }  # Terminal UI for advanced operations
crossterm = { version = "0.27", optional = true }

# Path manipulation and glob patterns
glob = "0.3"
pathdiff = "0.2"
globset = { version = "0.4", optional = true }  # More advanced glob matching

# Process and system info
sysinfo = { version = "0.30", optional = true }
procfs = { version = "0.16", optional = true }

# Archive handling
zip = { version = "0.6", optional = true }
sevenz-rust = { version = "0.6", optional = true }  # 7z support

# Memory management
mimalloc = { version = "0.1", optional = true }

# Content deduplication
fclones = { version = "0.34", optional = true }  # Fast file deduplication

# Package signature verification
pgp = { version = "0.13", optional = true }
gpgme = { version = "0.11", optional = true }

[dev-dependencies]
tempfile = "3.10"
assert_fs = "1.1"
predicates = "3.1"
tokio-test = "0.4"
proptest = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }  # Benchmarking

[features]
default = ["desktop-profile", "grub-integration", "validation", "selinux-mandatory", "dinit-integration"]

# Profiles - mutually exclusive storage backends
desktop-profile = ["redb-backend", "interactive", "merkle-trees", "fast-hash"]
server-profile = ["rocksdb-backend", "system-info", "parallel-gc", "compression"]
embedded-profile = ["lmdb-backend", "mimalloc", "compact-serialization"]

# Storage backends - only one should be active
lmdb-backend = ["lmdb"]
rocksdb-backend = ["rocksdb"]
redb-backend = ["redb"]  # Pure Rust alternative

# Mandatory features for NexisOS
selinux-mandatory = ["selinux", "selinux-sys"]
dinit-integration = ["ini"]

# Integration features
grub-integration = []
systemd-integration = []  # Keep for compatibility with other systems
layered-config = ["config", "toml_edit"]
templating = ["tera"]
alternative-templating = ["handlebars", "liquid"]
validation = ["schemars", "serde_valid", "miette/fancy"]
caps-support = ["caps"]
file-management = ["ignore", "same-file", "filetime"]

# Performance and system features
io-uring = ["tokio-uring"]
parallel-gc = ["rayon", "bloom", "dashmap", "crossbeam"]
mimalloc-allocator = ["mimalloc"]
compression = ["lz4", "zip", "brotli", "sevenz-rust"]
crypto-verify = ["ed25519-dalek", "pgp"]
interactive = ["dialoguer"]
tui-interface = ["tui", "crossterm"]
system-info = ["sysinfo", "procfs"]
fast-hash = ["xxhash-rust", "ahash"]
merkle-trees = ["merkle-cbt"]
cow-copy = ["reflink-copy"]
compact-serialization = ["rmp-serde"]
advanced-glob = ["globset"]
deduplication = ["fclones"]

# Development and debugging
debug-store = []
extensive-logging = ["tracing-subscriber/json"]
benchmarks = []

[target.'cfg(target_os = "linux")'.dependencies]
tokio-uring = { version = "0.5", optional = true }
tikv-jemallocator = { version = "0.6", optional = true }
# Linux-specific SELinux and capabilities
libselinux-sys = { version = "0.7", optional = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Ensure only one profile is selected
[package.metadata.cargo-all-features]
denylist = [
    ["desktop-profile", "server-profile", "embedded-profile"],
    ["read-optimized", "write-optimized", "memory-optimized"],
    ["mimalloc-allocator", "tikv-jemallocator"],
    ["postcard", "rmp-serde"]  # Don't use multiple serialization formats
]

# Performance optimization
[profile.release]
lto = "thin"
codegen-units = 1
panic = "abort"
opt-level = 3

[profile.release-with-debug]
inherits = "release"
debug = true
strip = false

[profile.dev]
debug = 2
overflow-checks = true
opt-level = 1  # Slightly faster dev builds

[profile.bench]
inherits = "release"
debug = true

[[bench]]
name = "store_operations"
harness = false
